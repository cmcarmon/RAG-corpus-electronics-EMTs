OMPUTER  ENGINEERING  is  a  discipline  that  deals  with  the  engineering  knowledge  required  to
build  digital  computers  and  special  systems  that  communicate  and/or  process  or  transmit  data.  As
such, computer engineering is a multi-disciplinary ﬁeld because it involves many different aspects of
engineering that are necessary in designing such complex systems. To illustrate this point one can think of all
the various parts of engineering that are involved in a design of a digital computer system. One can start with
the knowledge of the material science that is necessary to process the materials of which the integrated circuits
are made. One also has to deal with the devices and device physics to make the most efﬁcient transistors of
which computing sytems are built. The knowledge of electrical engineering and electronic circuits in particular
is necessary in order to design fast and efﬁcient integrated circuits. One level further in the hierarchy of the
required knowledge is a logic design which is an implementation of the digital functions. Digital design involves
not only an intimate knowledge of electrical engineering but also the use of computer aided design tools and
algorithms for efﬁcient implementation of computational structures. Building a complex computer system is
similar to building a house — at the very beginning one cannot be bothered with all the details involved in
the process, such as plumbing and electrical wiring. Similarly a process of designing an electronic computer
starts with an architecture that speciﬁes the functionality and major blocks. Much like building a house, those
blocks are later designed by teams of engineers using the architectural speciﬁcations of the computer. Computer
architecture is on a cross-road between electrical engineering and computer science. On one hand, one does
not need to specify all the details of implementation while deﬁning an architecture. However, if one does not
know the important aspects of the design which require the knowledge of electrical engineering, the architecture
may  not  be  good.  Given  that  the  implementation  of  the  architecture  has  to  serve  as  a  platform  for  various
applications, the knowledge of software, compilers, and high-level languages is also necessary.