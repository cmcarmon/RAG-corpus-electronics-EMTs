Just after throwing a ball (or club or other juggling object), all balls are in the air and are only under the influence of gravity. Assuming you catch the balls at a consistent level, then the timing of when the balls land is already determined. We can mark each point in time when a ball is going to land with an x, and each point in time when there is not yet a ball scheduled to land with a -. This describes the state that you're in and determines what you can throw next. For instance, we can look at the state just after our first throw in the diagram, it is xx--x. We can use the state to determine what can be thrown next. First we take the x off the left hand side (that's the ball that's landing next) and shift everything else to the left filling in a - on the right. This leaves us with x--x-. Since we caught a ball (the x we removed from the left) we can't "throw" a 0 next. We also can't throw a 1 or a 4, because there are already balls scheduled to land there. So assuming that the highest we can accurately throw a ball is to a height of 5, then we can only throw a 2, 3, or a 5. In this diagram, the juggler threw a 3, so an x goes in the third spot, replacing the -, and we have x-xx- as the new state.

The diagram on the left shows all possible states for someone juggling three items and a maximum height of 5. From each state you can follow the arrows and the corresponding numbers give you the siteswap. Any path which brings you back to the same state that you started with is a valid siteswap, and all siteswaps can be generated this way. The diagram becomes a lot bigger very fast when more balls or higher throws are introduced as there are more possible states and more possible throws.
Another method of representing siteswap states is having the next throw on the right and read to the left (instead of the left to right system described above), represent a ball with a 1 instead of an x, and represent a spot where there's no ball scheduled to land with a 0 instead of a -. Then the state can be represented with a binary number, such as binary 10011 for the first state in the space-time diagram above. This method makes it a lot easier to represent more objects or higher throws as it is less complicated to create.
The table on the right contains the same information as the diagram on the left. To generate a siteswap, first find the row of your starting state. Reading across the row will give you the possible numbers you can throw and the column will give you the resulting state. Moving like this from state to state until you end up back in your starting state will give you a valid siteswap.