An MPM simulation consists of the following stages:
(Prior to the time integration phase)
Initialization of grid and material points.
A geometry is discretized into a collection of material points, each with its own material properties and initial conditions (velocity, stress, temperature, etc.)
The grid, being only used to provide a place for gradient calculations is normally made to cover an area large enough to fill the expected extent of computational domain needed for the simulation.

(During the time integration phase - explicit formulation)
2. Material point quantities are extrapolated to grid nodes.

Material point mass (




m

m
p




{\textstyle m_{mp}}
), momenta (







P

m
p


→





{\textstyle {\vec {P_{mp}}}}
), stresses (









σ
¯


¯




m
p




{\displaystyle {\boldsymbol {\bar {\bar {\sigma }}}}_{mp}}
), and external forces (






b
→





{\displaystyle {\vec {b}}}
) are extrapolated to the nodes at the corners of the cells within which the material points reside. This is most commonly done using standard linear shape functions (




N

n
d
−
m
p




{\textstyle N_{nd-mp}}
), the same used in FEM.
The grid use the material point values to create the masses (




M

n
o
d
e




{\textstyle M_{node}}
), velocities (







V

n
o
d
e


→





{\textstyle {\vec {V_{node}}}}
), internal and external force vectors (







F

n
o
d
e



i
n
t
e
r
n
a
l



→





{\textstyle {\vec {F_{node}^{\mathsf {internal}}}}}
,







F

n
o
d
e



e
x
t
e
r
n
a
l



→





{\textstyle {\vec {F_{node}^{\mathsf {external}}}}}
) for the nodes:







F

n
o
d
e


i
n
t
e
r
n
a
l


→



=

∑

m
p










σ
¯


¯




m
p




∇

N

m
p
−
n
d




{\displaystyle {\vec {F_{node}^{internal}}}=\sum _{mp}~~{\bar {\bar {\sigma }}}_{mp}~~\nabla N_{mp-nd}}


3. Equations of motion are solved on the grid.

Newton's 2nd Law is solved to obtain the nodal acceleration (







A

n
o
d
e


→





{\displaystyle {\vec {A_{node}}}}
)
New nodal velocities are found (









V

n
o
d
e


→


~





{\displaystyle {\tilde {\vec {V_{node}}}}}
).

4. Derivative terms are extrapolated back to material points.

Material point acceleration (







a

m
p


→





{\displaystyle {\vec {a_{mp}}}}
), deformation gradient (










F

m
p


¯


¯






{\displaystyle {\mathcal {\bar {\bar {F_{mp}}}}}}
) (or strain rate (












ε
˙




m
p


¯


¯





{\displaystyle {\bar {\bar {{\dot {\varepsilon }}_{mp}}}}}
) depending on the strain theory used) is extrapolated from the surrounding nodes using similar shape functions to before (




N

n
d
−
m
p




{\displaystyle N_{nd-mp}}
).












ε
˙




m
p


¯


¯



=

∑

n
d





1
2




[




V

n
o
d
e


→



∇

N

n
d
−
m
p


+
(

V

n
o
d
e


∇

N

n
d
−
m
p



)

T


]


{\displaystyle {\bar {\bar {{\dot {\varepsilon }}_{mp}}}}=\sum _{nd}~{1 \over 2}~~[{\vec {V_{node}}}\nabla N_{nd-mp}+(V_{node}\nabla N_{nd-mp})^{T}]}

Variables on the material points: positions, velocities, strains, stresses etc. are then updated with these rates depending on integration scheme of choice and a suitable constitutive model.

5.Resetting of grid.

Now that the material points are fully updated at the next time step, the grid is reset to allow for the next time step to begin.