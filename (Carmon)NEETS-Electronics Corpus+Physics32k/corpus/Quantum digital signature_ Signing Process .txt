Let Person A (Alice) want to send a message to Person B (Bob). Hash algorithms won't be considered, so Alice has to sign every single bit of her message. Message-Bit b



∈
{
0
,
1
}


{\displaystyle \in \{0,1\}}
.
Alice chooses M pairs of private keys



{

k

0


i


,

k

1


i


}

1
≤
i
≤
M


{\displaystyle \{k_{0}^{i},k_{1}^{i}\}\quad 1\leq i\leq M}

All the




k

0




{\displaystyle k_{0}}
keys will be used to sign the message-bit if b = 0.
All the




k

1




{\displaystyle k_{1}}
keys will be used to sign the message-bit if b = 1.
The function which maps



k
↦

|


f

k


⟩


{\displaystyle k\mapsto |f_{k}\rangle }
is known to all parties. Alice now computes the corresponding public keys



{

|


f


k

0




i


⟩
,

|


f


k

1




i


⟩
}


{\displaystyle \{|f_{k_{0}}^{i}\rangle ,|f_{k_{1}}^{i}\rangle \}}
and gives all of them to the recipients. She can make as many copies as she needs, but has to take care, not to endanger the security




(

n
≫
T
m

has to hold


)



{\displaystyle \left(n\gg Tm{\text{ has to hold }}\right)}
.
Her level of security limits the number of identical public keys she can create
If
message-bit b = 0, she sends all her private keys




k

0




{\displaystyle k_{0}}
along with the message-bit b to Bob
message-bit b = 1, she sends all her private keys




k

1




{\displaystyle k_{1}}
along with the message-bit b to Bob
Remember: In this example Alice picks only one bit b and signs it. She has to do that for every single bit in her message