Traditionally, software engineering has focused primarily on computer programming with ad hoc analysis
and design techniques. Each software system was a unique piece of intellectual work; little emphasis was placed
on architecture, interchangeability of parts, reusability, etc. These ad hoc software engineering methods resulted
in the production of software systems which did not meet user requirements, were usually delivered over budget
and beyond schedule, and were extraordinarily difÔ¨Åcult to maintain and enhance.