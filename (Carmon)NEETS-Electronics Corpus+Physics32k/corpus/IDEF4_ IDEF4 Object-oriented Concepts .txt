IDEF4’s defines a set of object oriented concepts:
Domains : IDEF4 projects are implemented in a domain. A domain can be seen as the scope of the system being developed. During system design, the software is transitioned between three domains: the application domain, the design domain, and the implementation domain.
Features, Artifacts, and Objects
Object Instance : Objects can be object instances, object classes, and object partitions. Object instances are the individual things encountered in the application domain.
Classes : Classes are generalizations about objects and are used to manage complexity by taking advantage of similarities in object instances and grouping them under a class or category.
Subclass/Superclass : The term subclass captures the concept of grouping particular instances of a class into an even more specialized class.
Partitions : A partition object contains objects and relations.
Attributes : Attributes are an implementation choice on how to represent an object’s state.
Object States : Object states represent situations or conditions of an object instance that are meaningful in the design.
Method : A method is an implementation of behavior (i.e., a set of instructions according to which the object performs some operation).
Message and Polymorphism : Objects communicate by sending messages to each other.
Event : An event is a signal generated by a method in an object indicating some condition in the object.
Object Life cycles : In any system, objects exhibit patterns of behavior as they cycle through different states.
Client/Server : An object plays the role of a client relative to a message if it is the sender of that message.
Relationships and Roles : Objects connected together with arcs. These arcs are called relationships and they show associations between objects.
Inheritance : A specific type of relationship used in object-oriented technology is inheritance.
Encapsulation and Information Hiding : Encapsulation and information hiding are two object-oriented concepts that are most easily understood when discussed in terms of interactions between objects.