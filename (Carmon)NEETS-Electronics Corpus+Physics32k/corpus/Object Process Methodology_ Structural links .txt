Structural links specify static, time-independent, long-lasting relations in the system. A structural link connects two or more objects or two or more processes, but not an object and a process, except in the case of an exhibition-characterization link.
Unidirectional tagged structural link
Has a user-defined semantics regarding the nature of the relation from one thing to the other. Graphically, an arrow with an open arrowhead. Along the tagged structural link, the modeler should record a meaningful tag in the form of a textual phrase that expresses the nature of the structural relation between the connected objects (or processes) and makes sense when placed in the OPL sentence whose syntax follows.
Unidirectional null-tagged structural link
An unidirectional tagged structural link with no tag. In this case, the default unidirectional tag is used. The modeler has the option of setting the default unidirectional tag for a specific system or a set of systems. If no default is defined, the default tag is "relates to".
Bidirectional tagged structural link
When the tags in both directions are meaningful and not just the inverse of each other, they may be recorded by two tags on either side of a single bidirectional tagged structural link. Each tag shall align on the side of the arrow with the harpoon edge sticking out of the arrowhead unambiguously determining the direction in which each relation applies. The syntax of the resulting tagged structural link is two separate tagged structural link OPL sentences, one for each direction. Graphically, a line with harpoon shaped arrowheads on opposite sides at both ends of the link's line shall.
Reciprocal tagged structural link
A reciprocal tagged structural link is a bidirectional tagged structural link with no more than one tag. In either case, reciprocity indicate that the tag of a bidirectional structural link has the same semantics for its forward and backward directions. When no tag appears, the default tag shall be "are related". The syntax of the reciprocal tagged structural link with only one tag shall be: Source-thing and destination thing are reciprocity-tag. The syntax of the reciprocal tagged structural link with no tag is: Source thing and Destination-thing are related.
Fundamental structural relations
The most prevalent structural relations among OPM things and are of particular significance for specifying and understanding systems. Each of the fundamental relations is elaborate or refine one OPM thing, the source thing, or refinee, into a collection of one or more OPM things, the destination thing or things, or refineables. The fundamental structural relations are; Aggregation, Exhibition-characterization, Generalization-specialization, and Classification-instantiation.
Aggregation-participation link
A refinee—the whole—aggregates one or more other refineables—the parts. Graphically, a black solid (filled in) triangle with its apex connecting by a line to the whole and the parts connecting by lines to the opposite horizontal base shall denote the aggregation-participation relation link.
Exhibition-characterization link
A thing exhibits, or is characterized by, another thing. The exhibition-characterization relation binds a refinee—the exhibitor—with one or more refineables, which shall identify features that characterize the exhibitor Graphically, a smaller black triangle inside a larger empty triangle with that larger triangle's apex connecting by a line to the exhibitor and the features connecting to the opposite (horizontal) base defines the exhibition-characterization relation link.
Generalization-specialization and inheritance
These are structural relations which provide for abstracting any number of objects or process classes into superclasses, and assigning attributes of superclasses to subordinate classes.
Generalization-specialization link: The refinee—the general—generalizes the refineables, which are specializations of the general. Binds one or more specializations with the same persistence attribute value as the general, such that either the general and all its specializations are objects or the general and all its specializations are processes. Graphically, an empty triangle with its apex connecting by a line to the general and the specializations connecting by lines to the opposite base defines the generalization-specialization link.
Inheritance through specialization: Inheritance is assignment of OPM elements of a general to its specializations. A specialization inherits from the general thing through the generalization-specialization link the following four kinds of inheritable elements, if there are any: 1. all the general's parts from its aggregation-participation link; 2. all the general's features from its exhibition-characterization link; 3. all the tagged structural links to which the general connects; and 4. all the procedural links to which the general connects.

Specialization restriction through discriminating attribute: A subset of the possible values of an inherited attribute may restrict the specialization. An attribute whose different values determine corresponding specializations is a discriminating attribute.

Classification-instantiation and system execution
The relation between a class of things and an instance of that class in the system at the operational level.
Classification-instantiation link: A source thing, which is an object class or a process class connect to one or more destination things, which are valued instances of the source thing's pattern, i.e. the features specified by the pattern acquire explicit values. This relation provides the modeler with an explicit mechanism for expressing the relationship between a class and its instances created by the provision of feature values. Graphically, a small black circle inside an otherwise empty larger triangle with apex connecting by a line to the class thing and the instance things connecting by lines to the opposite base defines the classification-instantiation relation link. The syntax is: Instance-thing is an instance of Class-thing.
Instances of object class and process class: These are two distinct kinds of classes. An instance of a class is an incarnation of a particular identifiable instance of that class, an actual object of some class of objects bearing the same classification identifier. A single actual object is an object instance, while the pattern of object, which all the instances follow, is an object class. A process class is a pattern of happening, which involves object classes that are members of the preprocess and postprocess object sets. A single actual process occurrence, which follows this pattern and involves particular object instances in its preporcess and postprocess object sets, is a process instance. Hence, a process instance is a particular occurrence of a process class to which that instance belongs. Any process instance have associated with it a distinct set of preporcess and postprocess object instance sets.
State-specified structural relations and links
These provide for associating a state of one object with another object or with a state of another object.

State-specified characterization relation and link: An exhibition-characterization relation from a specialized object that exhibits a value for a discriminating attribute of that object, meaning that the specialized object shall have only that value. Graphically, the exhibition-characterization link triangular symbol, with its apex connecting to the specialized object and its opposite base connecting to the value, defines the state-specified characterization relation. The syntax is: Specialized-object exhibits value-name Attribute-Name.
State-specified tagged structural relations and links: A structural relation between a state of an object or value of an attribute and another object or its state or value, meaning that these two entities are associated with the tag expressing the semantics of the association. In case of a null tag (i.e., the tag is not specified), the corresponding default null tag is used. Three groups of state-specified tagged structural relations exist: (1) source state-specified tagged structural relation, (2) destination state-specified tagged structural relation, (3) source-and-destination state-specified tagged structural relation. Each of these groups includes the appropriate unidirectional, bidirectional, and reciprocal tagged structural relation, giving rise to seven kinds of state-specified tagged structural relation link and corresponding OPL sentences.
More information and examples can be found in Model-Based Systems Engineering with OPM and SysML, Chapter 3.3 "Adding structural links".