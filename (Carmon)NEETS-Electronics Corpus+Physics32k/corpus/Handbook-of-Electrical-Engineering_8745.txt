Functional  HLLs  are  higher  level  than  procedural  languages  because  they  reduce  the  number  of  symbols
needed  to  encode  a  solution  as  a  program.  The  problem  with  functional  programs,  however,  is  their  high
execution  overhead  caused  by  the  delayed  binding  of  their  interpreters.  This  makes  LISP  and  PROLOG,  for
example,  excellent  prototyping  languages  but  expensive  production  languages.  LISP  has  been  conﬁned  to
predominantly research use; few commercial products based on LISP have been successfully delivered without
ﬁrst  rewriting  them  in  a  lower-level  language  such  as  C.  Other  functional  languages  such  as  PROLOG  and
STRAND88 have had only limited success as commercial languages.