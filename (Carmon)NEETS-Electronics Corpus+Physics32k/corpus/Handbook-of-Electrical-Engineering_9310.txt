With k = 5, for example, the break-even point is n = 13. The difference in performance of the two algorithms
for large numbers of n is quite dramatic. Again with k = 5, the O(nÂ·log(n)) algorithm is 217 times faster if n =
10,000, and it is 14,476 times faster if n = 1,000,000. If the faster algorithm would need, e.g., 10 minutes to
sort a million items, the slower one would require about 100 days.