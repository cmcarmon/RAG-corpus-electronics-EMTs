Declarative  languages  have  the  same  inefﬁciencies  as  functional  languages.  For  this  reason,  expert  system
applications are usually developed in a specialized declarative system called an expert system shell. A shell extracts
the declarative or constraint-based capability from functional languages such LISP and PROLOG to improve
efﬁciency. Often it is possible to simplify the shell so that early binding is achieved, thus leading to compiling
translators rather than interpreters. Very large and efﬁcient expert systems have been developed for commercial
use using this approach.