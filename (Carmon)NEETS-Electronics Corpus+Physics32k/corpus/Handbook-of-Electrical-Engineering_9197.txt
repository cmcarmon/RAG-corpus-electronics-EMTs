In an attempt to ﬁnd some solutions to the “software crisis,” large governmental and private organizations
motivated  the  development  of  so-called  “waterfall”  methods.  These  methods  deﬁned  formal  requirement
deﬁnition and analysis phases, which had to be completed before commencing a formal design stage, which in
turn had to be completed before beginning a formal implementation phase, etc. Although waterfall methods
were usually superior to ad hoc methods, large and complex software systems were still being delivered over
budget and beyond schedule, which did not meet user requirements. There were several reasons for this. First,
waterfall  methods  focus  on  the  generation  of 
  rather  than “engineering.”  Simply  put,  writing
documents  is  not  the  same  as  doing  good  engineering.  Second,  the  waterfall  methods  do  not  support  the
evolution
 of system requirements throughout the development life cycle. Also, the prose English speciﬁcations
produced  within  the  waterfall  methods  are  not  well  suited  to  describing  the  complex  behaviors  of  software
systems.