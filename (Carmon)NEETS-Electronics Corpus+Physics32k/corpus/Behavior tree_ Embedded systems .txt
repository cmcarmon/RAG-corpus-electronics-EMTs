Failure of a design to satisfy a systemâ€™s requirements can result in schedule and cost overruns. If there are also critical dependability issues, not satisfying system requirements can have life-threatening consequences. However, in current approaches, ensuring requirements are satisfied is often delayed until late in the development process during a cycle of testing and debugging. This work describes how the system development approach, behavior engineering, can be used to develop software for embedded systems. The result is a model-driven development approach that can create embedded system software that satisfies its requirements, as a result of applying the development process.